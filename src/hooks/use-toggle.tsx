import { useState, useCallback } from 'react';

/**
 * Пользовательский хук для управления булевым состоянием с возможностью переключения.
 *
 * Этот хук используется для упрощения работы с логическими значениями, такими как "включено/выключено",
 * "открыто/закрыто" и т.д. Он избавляет от необходимости вручную реализовывать логику переключения состояния,
 * делая код более чистым и читаемым.
 *
 * @param {boolean} [initialValue=false] - Начальное значение состояния (по умолчанию false).
 * @returns {[boolean, <T>(value?: T) => void]} Массив, где первый элемент — текущее состояние, а второй — функция для его изменения.
 *
 * Функция переключения работает следующим образом:
 * - Если вызывается без параметров (или с параметром, не являющимся булевым), то состояние переключается на противоположное.
 * - Если передано булево значение, то состояние устанавливается в это значение.
 *
 * @example
 * // Использование хука с начальным значением true:
 * const [on, toggle] = useToggle(true);
 *
 * // Переключение состояния:
 * toggle();
 *
 * // Установка явного значения состояния:
 * toggle(false);
 */
export const useToggle = (
  initialValue: boolean = false,
): [boolean, <T>(value?: T) => void] => {
  const [on, setOn] = useState<boolean>(initialValue);

  const toggle = useCallback(<T,>(value?: T) => {
    if (typeof value === 'boolean') {
      setOn(value);
    } else {
      setOn((prev) => !prev);
    }
  }, []);

  return [on, toggle];
};
